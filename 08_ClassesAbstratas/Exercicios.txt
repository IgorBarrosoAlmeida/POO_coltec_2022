1. Repare que a nossa classe Conta é uma excelente candidata para uma classe abstrata.
Transforme a classe Conta em abstrata, repare o que acontece no seu main já existente do
TestaContas.

2. Para que o código do main volte a compilar, troque o new Conta() por new
ContaCorrente().

3. Transforme o método atualiza() da classe Conta em abstrato. PROBLEMAS?

4. Reescreva o método atualiza()!

5. Crie uma classe chamada Pessoa. Uma pessoa possui um nome e uma idade.
    ▶ crie 2 construtores: 1 que recebe o nome e a idade como parâmetros de entrada e um que
    não recebe parâmetros e inicializa os atributos com um valor padrão (ÒindefinidoÓ para
    Strings e 0 para inteiros).
    ▶ crie os métodos de acesso para os atributos (GET e SET).

6. Crie uma classe Amigo, que herda Pessoa, e possui uma data de aniversário.
    ▶ crie um construtor que não recebe parâmetros de entrada, e inicializa o atributo com um
    valor padrão ("indefinido", por exemplo).
    ▶ crie os métodos de acesso para o atributo data de nascimento.

7. Crie uma classe Conhecido, que herda Pessoa, e possui um email.
    ▶ crie um construtor que não recebe parâmetros de entrada, e inicializa o e-mail com um valor
    padrão (ÒindefinidoÓ, por exemplo).
    ▶ crie os métodos de acesso para este atributo.

8. Crie agora, uma classe Agenda, que possui pessoas (em um array) e dois atributos que
controlam: a quantidade de amigos e a quantidade de conhecidos.
    ▶ crie um construtor que recebe por parâmetro a quantidade de pessoas que a agenda terá, e
    inicializa o array de Pessoa. Neste construtor, inicialize todas as posições do array criando
    ALEATORIAMENTE um Conhecido ou um Amigo
    utilize o comando 1 + (int) (Math.random() * 2) para sortear valores entre 1 e 2. Se o valor
    encontrado for 1, crie um Amigo. Se o valor encontrado for 2, crie um Conhecido.
    ▶ Crie os métodos GET para todos os atributos da classe Agenda.
    ▶ crie um método chamado addInformacoes, que não recebe parâmetros de entrada. Para cada
    Pessoa na agenda, peça para o usuário digitar (via teclado) as informações cabíveis para cada
    tipo de Pessoa, e acesse os métodos SET para atribuir as informações.
    ▶ crie um método chamado imprimeAniversários, que imprime os aniversários de todos os
    amigos que estão armazenados na agenda.
    ▶ crie um método chamado imprimeEmail, que imprime os e-mails de todos os conhecidos que
    estão armazenados na agenda.

9. Crie uma classe de teste para a Agenda.
    ▶ peça para o usuário informar (via teclado) quantas pessoas ele deseja colocar na agenda, e
    crie uma Agenda com esta informação.
    ▶ imprima na tela a quantidade de amigos e de conhecidos na agenda.
    ▶ adicione informações à agenda.
    ▶ imprima todos os aniversários dos amigos presentes na agenda.
    ▶ imprima todos os e-mails dos conhecidos armazenados na agenda.